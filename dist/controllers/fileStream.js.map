{"version":3,"file":"fileStream.js","names":["fs","require","ffmpeg","getVideoFile","req","res","next","baseDirectory","param","url","split","par","console","log","path","forEach","d","videoPath","stat","statSync","fileSize","size","range","headers","parts","replace","start","parseInt","end","chunksize","file","createReadStream","head","writeHead","pipe","getVideo","render","module","exports"],"sources":["../../controllers/fileStream.js"],"sourcesContent":["const fs = require('fs');\r\nconst ffmpeg = require('fluent-ffmpeg');\r\n\r\nfunction getVideoFile(req,res,next){\r\n  // const filePath = '../video.mp4';\r\n  // console.log('streaming');\r\n  // fs.stat(filePath, (err, stats) => {\r\n  //   if (err) {\r\n  //     console.error(err);\r\n  //     res.writeHead(404, {'Content-Type': 'text/plain'});\r\n  //     res.json({\r\n  //       \"type\":\"error\",\r\n  //       \"message\":\"File not found\"\r\n  //     });\r\n  //     return;\r\n  //   }\r\n\r\n  //   const range = req.headers.range;\r\n  //   const fileSize = stats.size;\r\n  //   const chunkSize = 1024 * 1024;\r\n  //   const start = Number(range.replace(/\\D/g, \"\"));\r\n  //   const end = Math.min(start + chunkSize, fileSize - 1);\r\n\r\n  //   const headers = {\r\n  //     \"Content-Type\": \"video/mp4\",\r\n  //     \"Content-Length\": end - start,\r\n  //     \"Content-Range\": \"bytes \" + start + \"-\" + end + \"/\" + fileSize,\r\n  //     \"Accept-Ranges\": \"bytes\",\r\n  //   };\r\n\r\n  //   res.writeHead(206, headers);\r\n\r\n  //   const fileStream = fs.createReadStream(filePath, { start, end });\r\n\r\n  //   const ffmpegStream = ffmpeg(fileStream)\r\n  //     .videoCodec('libx264')\r\n  //     .format('mp4')\r\n  //     .outputOptions('-movflags frag_keyframe+empty_moov')\r\n  //     .on('end', () => {\r\n  //       console.log('Streaming finished');\r\n  //     })\r\n  //     .on('error', (err) => {\r\n  //       console.error(err);\r\n  //     });\r\n\r\n  //   ffmpegStream.pipe(res);\r\n  // });\r\n  const baseDirectory = \"C:\\\\Users\\\\Shubhranshu Sanjeev\";\r\n  const param = req.url.split('@')[1];\r\n  const par = param.split(';');\r\nconsole.log(req.url);\r\n  let path = '';\r\n  par.forEach((d)=>{\r\n    path = path + \"\\\\\" + d;\r\n  })\r\n  console.log(baseDirectory+path);\r\n  const videoPath = baseDirectory+path;\r\n    const stat = fs.statSync(videoPath);\r\n    const fileSize = stat.size;\r\n    console.log('video required');\r\n    const range = req.headers.range;\r\n    if (range) {\r\n        const parts = range.replace(/bytes=/, \"\").split(\"-\");\r\n        const start = parseInt(parts[0], 10);\r\n        const end = parts[1] ? parseInt(parts[1], 10) : fileSize - 1;\r\n\r\n        const chunksize = (end - start) + 1;\r\n        const file = fs.createReadStream(videoPath, { start, end });\r\n        const head = {\r\n            'Content-Range': `bytes ${start}-${end}/${fileSize}`,\r\n            'Accept-Ranges': 'bytes',\r\n            'Content-Length': chunksize,\r\n            'Content-Type': 'video/mp4',\r\n        };\r\n\r\n        res.writeHead(206, head);\r\n        file.pipe(res);\r\n    } else {\r\n        const head = {\r\n            'Content-Length': fileSize,\r\n            'Content-Type': 'video/mp4',\r\n        };\r\n        res.writeHead(200, head);\r\n        fs.createReadStream(videoPath).pipe(res);\r\n    }\r\n} \r\n\r\nfunction getVideo(req,res,next) {\r\n    res.render('video');\r\n}\r\n\r\nmodule.exports.getVideo = getVideo;\r\nmodule.exports.getVideoFile = getVideoFile;"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,MAAM,GAAGD,OAAO,CAAC,eAAe,CAAC;AAEvC,SAASE,YAAYA,CAACC,GAAG,EAACC,GAAG,EAACC,IAAI,EAAC;EACjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,MAAMC,aAAa,GAAG,gCAAgC;EACtD,MAAMC,KAAK,GAAGJ,GAAG,CAACK,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACnC,MAAMC,GAAG,GAAGH,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC;EAC9BE,OAAO,CAACC,GAAG,CAACT,GAAG,CAACK,GAAG,CAAC;EAClB,IAAIK,IAAI,GAAG,EAAE;EACbH,GAAG,CAACI,OAAO,CAAEC,CAAC,IAAG;IACfF,IAAI,GAAGA,IAAI,GAAG,IAAI,GAAGE,CAAC;EACxB,CAAC,CAAC;EACFJ,OAAO,CAACC,GAAG,CAACN,aAAa,GAACO,IAAI,CAAC;EAC/B,MAAMG,SAAS,GAAGV,aAAa,GAACO,IAAI;EAClC,MAAMI,IAAI,GAAGlB,EAAE,CAACmB,QAAQ,CAACF,SAAS,CAAC;EACnC,MAAMG,QAAQ,GAAGF,IAAI,CAACG,IAAI;EAC1BT,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC7B,MAAMS,KAAK,GAAGlB,GAAG,CAACmB,OAAO,CAACD,KAAK;EAC/B,IAAIA,KAAK,EAAE;IACP,MAAME,KAAK,GAAGF,KAAK,CAACG,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACf,KAAK,CAAC,GAAG,CAAC;IACpD,MAAMgB,KAAK,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACpC,MAAMI,GAAG,GAAGJ,KAAK,CAAC,CAAC,CAAC,GAAGG,QAAQ,CAACH,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAGJ,QAAQ,GAAG,CAAC;IAE5D,MAAMS,SAAS,GAAID,GAAG,GAAGF,KAAK,GAAI,CAAC;IACnC,MAAMI,IAAI,GAAG9B,EAAE,CAAC+B,gBAAgB,CAACd,SAAS,EAAE;MAAES,KAAK;MAAEE;IAAI,CAAC,CAAC;IAC3D,MAAMI,IAAI,GAAG;MACT,eAAe,EAAG,SAAQN,KAAM,IAAGE,GAAI,IAAGR,QAAS,EAAC;MACpD,eAAe,EAAE,OAAO;MACxB,gBAAgB,EAAES,SAAS;MAC3B,cAAc,EAAE;IACpB,CAAC;IAEDxB,GAAG,CAAC4B,SAAS,CAAC,GAAG,EAAED,IAAI,CAAC;IACxBF,IAAI,CAACI,IAAI,CAAC7B,GAAG,CAAC;EAClB,CAAC,MAAM;IACH,MAAM2B,IAAI,GAAG;MACT,gBAAgB,EAAEZ,QAAQ;MAC1B,cAAc,EAAE;IACpB,CAAC;IACDf,GAAG,CAAC4B,SAAS,CAAC,GAAG,EAAED,IAAI,CAAC;IACxBhC,EAAE,CAAC+B,gBAAgB,CAACd,SAAS,CAAC,CAACiB,IAAI,CAAC7B,GAAG,CAAC;EAC5C;AACJ;AAEA,SAAS8B,QAAQA,CAAC/B,GAAG,EAACC,GAAG,EAACC,IAAI,EAAE;EAC5BD,GAAG,CAAC+B,MAAM,CAAC,OAAO,CAAC;AACvB;AAEAC,MAAM,CAACC,OAAO,CAACH,QAAQ,GAAGA,QAAQ;AAClCE,MAAM,CAACC,OAAO,CAACnC,YAAY,GAAGA,YAAY","ignoreList":[]}